/* Проект создан при помощи просмотра видео на канале "Фрилансер по жизни"
Ссылка на видео: https://youtu.be/f-irDQwt1l4 */

*,
*::before,
*::after {
  padding: 0;
  margin: 0;
  border: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

a {
  text-decoration: none;
}

ul,
ol,
li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
}

html,
body {
  height: 100%;
  line-height: 1;
  font-size: 14px;
  color: #000;
}

/* ---------------------------------------------------------------------------- */
.wrapper {
  min-height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  /* ! Применения свойства флекс контейнера (display: flex) и его параметра выравнивания в колонку (flex-direction: column) "приклеивает" футер внизу страницы 
  ? Как именно это работает? (Dev Tools)
  */
}

.container {
  max-width: 1046px;
  padding: 0px 15px;
  margin: 0px auto;
  box-sizing: content-box;
}

.ibg {
  position: relative;
}

.ibg img {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
  /* !Свойство object-fit определяет, как содержимое заменяемого элемента, такого как <img> или <video>, должно заполнять контейнер относительно его высоты и ширины. Значение 'cover' означает, что смещаемый контент меняет свой размер таким образом, чтобы сохранять свои пропорции при заполнении блока: окончательный размер контента будет определён как "покрытие" блока, ограничиваясь его шириной и высотой. */
}

/*# sourceMappingURL=style.css.map */
/* --ШАПКА------------------------------------- */
.header {
  position: absolute;
  width: 100%;
  left: 0;
  top: 0;
  /* прибиваем к левому верхнему краю контейнера */
  z-index: 50;
}
.header__container {
  display: flex;
  min-height: 104px;
  align-items: center;
}

@media (max-width: 479px) {
  .header__container {
    min-height: 70px;
    /*! Медиа запрос на изменение размера шапки (блок header__container) при уменьшении ширины экрана до 479px (параметр 'max-width') и установления минимально высоты в 70px (параметр 'min-height') - для телефонов с маленьким экраном. */
  }
}

.header__logo {
  font-size: 24px;
  font-weight: 700;
  color: inherit;
  /*! Задаём цвету параметр inherit чтобы наследовались свойства, обозначенные  вверху для body (ссылки по умолчанию не наследуют свойства родительских блоков*/
}

.header__menu {
  margin: 0px 0px 0px 133px;
}

@media (max-width: 992px) {
  .header__menu {
    margin: 0px 0px 0px 80px;
    /*! Медиа запрос на уменьшение внешнего отступа блока (margin) до 80px при достижении ширины 992px (параметр max-width) */
  }
}

@media (max-width: 767px) {
  .header__menu {
    margin: 0px 0px 0px 40px;
    /*! Медиа запрос на уменьшение внешнего отступа блока (margin) до 40px при достижении ширины 767px (параметр max-width) - для планшетного разрешения*/
  }
}

@media (max-width: 479px) {
  .header__menu {
    margin: 0px 0px 0px 20px;
    /*! Медиа запрос на уменьшение внешнего отступа блока (margin) до 20px при достижении ширины 479px (параметр max-width) - телефонов с маленьким экраном*/
  }
}

.menu {
  padding: 5px 0;
}

.menu__list {
  flex-wrap: wrap;
  /* ! Параметр нужен для переноса элементов списка на следующую строку при меньшем разрешении экрана (на телефонах) и избежания выхода списка за пределы экрана*/
  display: flex;
}

.menu__item {
}

.menu__item:not(:last-child) {
  margin: 0px 21px 0px 0px;
  /* ! Здесь мы применяем внешний отступ для всех элементов списка кроме последнего (параметр :not(:last-child)) во избежание провисающих отступов, "съедающих" лишнее пространство */
}

.menu__link {
  color: #737373;
  font-weight: 600;
  line-height: calc(24 / 14 * 100%);
  /* ! Функция 'calc' позволяет совершить математические операции внутри css, и в данном случае рассчитывает оптимальную высоту строки в пропорциях к остальному шрифту. Пояснение: изначально в макете параметр 'line-height' имел значение 24px. Делим на размер шрифта, указанного для всего блока body вначале css (14px) и умножаем на 100%, что приблизительно равняется 171%. */
}

@media (max-width: 479px) {
  .menu__link {
    font-size: 18px;
    /*! Медиа запрос на уменьшение увеличение шрифта (font-size до 18px при достижении ширины 479px (параметр max-width) - телефонов с маленьким экраном. При этом автоматически подтягивается высота строки (line-height), т.к. значение рассчитывается в процентах */
  }
}

/* --MAIN------------------------------------- */
.page {
  flex: 1 1 auto;
}

.page__mainblock {
}

/* --ПОДВАЛ------------------------------------- */
.footer {
}

/* --MAIN-BLOCK------------------------------------- */

.main-block {
  position: relative;
}

.mainblock__container {
}

.main-block__body {
  padding: 184px 0px 191px 0px;
  position: relative;
  z-index: 2;
  min-width: 509px;
}

.main-block__title {
  font-weight: 800;
  font-size: 58px;
  line-height: calc(80 / 58 * 100%);
  /* !Здесь применяется та же логика, что и в строке 154 - вычисление оптимального размера высоты строки, путём деления значения в макете на текущий размер шрифта */
}

.main-block__text {
  color: #737373;
  /* font-weight: 500; */
  font-size: 20px;
  line-height: calc(30 / 20 * 100%);
}

.main-block__buttons {
}

.main-block__button {
}

.main-block__button-border {
}

.main-block__image {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
